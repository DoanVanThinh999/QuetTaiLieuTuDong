package com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip;

import static com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.EditActivity.bitmap;

import android.Manifest;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.ContextCompat;
import androidx.core.content.FileProvider;

import com.ChupAnhActivity;
import com.Model.TaiKhoan;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.MainActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.R;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.EditActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.PdfExporter;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.PreviewActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.PublicVideoActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.PublicVideoListActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.ScanProcessor;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.ScannedDocViewerActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.TaoVideoHuongDanNguoiDungActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.TestActivity;
import com.example.bai_tap_lon_thi_cuoi_ky_de_9.phienbanvip.ui.TracNghiemTuVideoActivity;

import org.opencv.android.OpenCVLoader;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;

public class QuetTaiLieuTuDongSuDungActivity extends AppCompatActivity {
    private static final int PICK_IMAGE = 1;
    private ImageView imageView, imgXemLSLuuAnh, imgLogout;
    private Bitmap inputBitmap;
    private TaiKhoan taiKhoan;
    private Button btnHDSD;
    private static final int REQUEST_EDIT_IMAGE = 123;
    private static final int REQUEST_PREVIEW_IMAGE = 321; // m√£ t√πy ch·ªçn
    Bitmap originalBitmap;  // Bi·∫øn ƒë·ªÉ l∆∞u ·∫£nh g·ªëc
    static {
        if (!OpenCVLoader.initDebug()) {
            Log.e("OpenCV", "‚ùå Kh√¥ng th·ªÉ load OpenCV");
        } else {
            Log.d("OpenCV", "‚úÖ OpenCV s·∫µn s√†ng!");
        }
    }
    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_quet_tai_lieu_tu_dong_su_dung);
        imageView = findViewById(R.id.imageView);
        Button btnSelect = findViewById(R.id.btnSelect);
        Button btnScan = findViewById(R.id.btnScan);
        Button btnEdit = findViewById(R.id.btnEdit);
        imgXemLSLuuAnh = findViewById(R.id.imgXemLSLuuAnh);
        btnHDSD = findViewById(R.id.btnHDSD);
        Intent intent = getIntent();
        taiKhoan = (TaiKhoan) intent.getSerializableExtra("taiKhoan");
        imgLogout = findViewById(R.id.imgLogout);
        imgLogout.setOnClickListener(view -> {
            Intent intent1 = new Intent(QuetTaiLieuTuDongSuDungActivity.this, MainActivity.class);
            //Intent intent1 = new Intent(QuetTaiLieuTuDongSuDungActivity.this, TestActivity.class);
            intent1.putExtra("taiKhoan", taiKhoan);
            startActivity(intent1); // Kh·ªüi ch·∫°y ChupAnhActivity
        });
        btnHDSD.setOnClickListener(view -> {
            Intent intent1 = new Intent(QuetTaiLieuTuDongSuDungActivity.this, PublicVideoListActivity.class);
            //Intent intent1 = new Intent(QuetTaiLieuTuDongSuDungActivity.this, TestActivity.class);
            intent1.putExtra("taiKhoan", taiKhoan);
            startActivity(intent1); // Kh·ªüi ch·∫°y ChupAnhActivity
        });


        imgXemLSLuuAnh.setOnClickListener(view -> {
            Intent intent1 = new Intent(QuetTaiLieuTuDongSuDungActivity.this, ScannedDocViewerActivity.class);
            intent1.putExtra("taiKhoan", taiKhoan);
            startActivity(intent1); // Kh·ªüi ch·∫°y ChupAnhActivity
        });

        btnSelect.setOnClickListener(v -> {
            new AlertDialog.Builder(this)
                    .setTitle("Ch·ªçn ngu·ªìn ·∫£nh")
                    .setItems(new CharSequence[]{"Th∆∞ vi·ªán", "M√°y ·∫£nh"}, (dialog, which) -> {
                        if (which == 0) {
                            selectImage(); // ch·ªçn t·ª´ th∆∞ vi·ªán
                        } else {
                            captureImage(); // ch·ª•p ·∫£nh
                        }
                    })
                    .show();
        });

        btnScan.setOnClickListener(v -> scanDocument());
        btnEdit.setOnClickListener(v -> openEditActivity());
    }
    private static final int REQUEST_CAPTURE = 999;

    private void captureImage() {
        Intent intent = new Intent(this, ChupAnhActivity.class);
        startActivityForResult(intent, REQUEST_CAPTURE);
    }

    private void selectImage() {
        //Cho ph√©p ng∆∞·ªùi d√πng ch·ªçn ·∫£nh t·ª´ th∆∞ vi·ªán
        Intent intent = new Intent(Intent.ACTION_PICK,
                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        // MediaStore.Images.Media.EXTERNAL_CONTENT_URI ƒê√¢y l√† URI tr·ªè t·ªõi ·∫£nh ngo√†i , nh∆∞ ·∫£nh b·∫°n ch·ª•p v√† l∆∞u trong th∆∞ vi·ªán
        // . N√≥ s·∫Ω m·ªü giao di·ªán ch·ªçn ·∫£nh m·∫∑c ƒë·ªãnh c·ªßa h·ªá th·ªëng.
        startActivityForResult(intent, PICK_IMAGE);
        //Kh·ªüi ch·∫°y Intent ƒë√≥, ƒë·ªìng th·ªùi g√°n m√£ PICK_IMAGE ƒë·ªÉ bi·∫øt ƒë√¢y l√† request ch·ªçn ·∫£nh.
        // Khi ng∆∞·ªùi d√πng ch·ªçn xong, k·∫øt qu·∫£ s·∫Ω tr·∫£ v·ªÅ h√†m onActivityResult() v·ªõi m√£ t∆∞∆°ng ·ª©ng.
    }
    private void scanDocument() {
        if (inputBitmap == null) return;

        File file = new File(getExternalFilesDir(null), "originalBitmap.jpg");
        try (FileOutputStream out = new FileOutputStream(file)) {
            inputBitmap.compress(Bitmap.CompressFormat.JPEG, 100, out);
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }
        // Resize n·∫øu qu√° l·ªõn
        if (inputBitmap.getWidth() > 2000 || inputBitmap.getHeight() > 2000) {
            inputBitmap = Bitmap.createScaledBitmap(inputBitmap, inputBitmap.getWidth() / 3, inputBitmap.getHeight() / 3, true);
        }

        // üß† Th·ª≠ detect l·∫ßn ƒë·∫ßu
        Bitmap cropped = ScanProcessor.detectAndCrop(this, inputBitmap);

        // ‚ùå N·∫øu fail ‚Üí retry v·ªõi l·ªçc m·∫°nh h∆°n
        if (cropped == null) {
            cropped = ScanProcessor.detectAndCrop(this, inputBitmap, true);
            if (cropped != null) {
                Toast.makeText(this, "ƒê√£ t·ª± ƒë·ªông l·ªçc nhi·ªÖu v√† qu√©t l·∫°i!", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Kh√¥ng ph√°t hi·ªán ƒë∆∞·ª£c t√†i li·ªáu!", Toast.LENGTH_SHORT).show();
                return;
            }
        }

        // ‚úÖ N·∫øu qu√©t th√†nh c√¥ng
        imageView.setImageBitmap(cropped);
        inputBitmap = cropped;

        PreviewActivity.previewBitmaps = new ArrayList<>(ScanProcessor.debugSteps);
        PreviewActivity.originalBitmap = inputBitmap;
        Intent intent = new Intent(this, PreviewActivity.class);
        intent.putExtra("taiKhoan", taiKhoan);
        intent.putExtra("originalBitmapUri", Uri.fromFile(file).toString());

        startActivityForResult(intent, REQUEST_PREVIEW_IMAGE);
    }



    private void openEditActivity() {
        if (inputBitmap == null) return;
        bitmap = inputBitmap;
        Intent editIntent = new Intent(this, EditActivity.class);
        startActivityForResult(editIntent, REQUEST_EDIT_IMAGE);  // Truy·ªÅn m√£ y√™u c·∫ßu
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (requestCode == PICK_IMAGE && resultCode == RESULT_OK && data != null) {
            // N·∫øu ng∆∞·ªùi d√πng ch·ªçn ·∫£nh t·ª´ th∆∞ vi·ªán
            Uri selectedImage = data.getData();
            try {
                inputBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), selectedImage);
                imageView.setImageBitmap(inputBitmap);
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (requestCode == REQUEST_CAPTURE && resultCode == RESULT_OK && data != null) {
            // N·∫øu ·∫£nh ƒë∆∞·ª£c ch·ª•p t·ª´ camera
            Uri uri = Uri.parse(data.getStringExtra("imageUri"));
            try {
                inputBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), uri);
                imageView.setImageBitmap(inputBitmap);
            } catch (IOException e) {
                e.printStackTrace();
                Toast.makeText(this, "L·ªói ƒë·ªçc ·∫£nh t·ª´ camera!", Toast.LENGTH_SHORT).show();
            }
        } else if (requestCode == REQUEST_EDIT_IMAGE && resultCode == RESULT_OK && data != null) {
            // Nh·∫≠n Uri c·ªßa ·∫£nh ƒë√£ ch·ªânh s·ª≠a t·ª´ EditActivity
            String editedImageUriString = data.getStringExtra("editedImageUri");
            Uri editedImageUri = Uri.parse(editedImageUriString);
            try {
                inputBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), editedImageUri);
                imageView.setImageBitmap(inputBitmap);  // Hi·ªÉn th·ªã ·∫£nh ƒë√£ ch·ªânh s·ª≠a
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (requestCode == REQUEST_PREVIEW_IMAGE && resultCode == RESULT_OK && data != null) {
            // L·∫•y Uri t·ª´ k·∫øt qu·∫£ tr·∫£ v·ªÅ v√† c·∫≠p nh·∫≠t imageView
            String updatedImageUri = data.getStringExtra("updatedImageUri");
            if (updatedImageUri != null) {
                Uri uri = Uri.parse(updatedImageUri);
                try {
                    inputBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), uri);
                    imageView.setImageBitmap(inputBitmap);
                    Toast.makeText(this, "·∫¢nh ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª´ Preview!", Toast.LENGTH_SHORT).show();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

}